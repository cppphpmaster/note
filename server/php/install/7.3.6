一. 安装php7.3.6

1.安装编译环境  
sudo apt-get install \
build-essential \
libtool \
gcc \
g++ \
vim \
autoconf \
libiconv-hook-dev \
libmcrypt-dev \
libxml2-dev \
libmysqlclient-dev \
libcurl4-openssl-dev \
libjpeg8-dev \
libfreetype6-dev \
libzip-dev \
openssl \
libssl-dev \
curl \
pkg-config \
libsasl2-dev \


2.安装php
cd php-xxx/
./configure --prefix=/usr/local/php/7.3.6 \
--with-config-file-path=/etc/php/7.3.6 \
--enable-fpm \
--enable-pcntl \
--enable-mysqlnd \
--enable-opcache \
--enable-sockets \
--enable-sysvmsg \
--enable-sysvsem \
--enable-sysvshm \
--enable-shmop \
--enable-zip \
--enable-soap \
--enable-xml \
--enable-mbstring \
--disable-rpath \
--disable-fileinfo \
--with-mysqli=mysqlnd \
--with-pdo-mysql=mysqlnd \
--with-pcre-regex \
--with-iconv \
--with-zlib \
--with-gd \
--with-mhash \
--with-xmlrpc \
--with-openssl \
--with-curl \

sudo make
sudo make install
sudo mkdir -p /etc/php/7.3.6
sudo cp php.ini-development /etc/php/7.3.6/php.ini
将PHP的可执行目录添加到环境变量中。打开~/.bashrc，在末尾添加如下内容：
export PATH=/usr/local/php/7.3.6/bin:$PATH
export PATH=/usr/local/php/7.3.6/sbin:$PATH
保存后执行：source ~/.bashrc
通过php -v查看php版本，完成。

2.1 安装composer
apt install composer
配置国内镜像: composer config -g repo.packagist composer https://packagist.phpcomposer.com
安装指定版本的laravel: composer create-project laravel/laravel myproject --prefer-dist v5.8.*

3. 安装curl扩展

    wget http://curl.haxx.se/download/curl-7.61.1.tar.gz
    tar zxvf curl-7.61.1.tar.gz
    cd curl-7.61.1
    ./configure --prefix=/usr/local/curl/7.61.1
    make
    make install

    cd /（php源码目录）/ext/curl
    运行phpize： /（php编译目录）/bin/phpize
    ./configure --with-php-config=/usr/local/php/7.3.6/bin/php-config --with-curl=/usr/local/curl/7.61.1
    make && make install
    修改php.ini，增加：extension=curl.so（如果没有安装过其他php扩展，则需要同时配置extension_dir="/（php编译后目录）/lib/php/extensions/no-debug-non-zts-20121212/"，上一个步骤生成.so文件的时候，会输出extension_dir目录）
	
4. 安装openssl扩展
	进入/ext/openssl目录 
	cp config0.m4 config.m4
	./configure --with-php-config=/usr/local/php/7.3.6/bin/php-config --with-openssl 

	出现的Cannot find OpenSSL's evp.h这个错误的解决方法: 
	sudo apt-get install -y autoconf g++ make openssl libssl-dev libcurl4-openssl-dev
	sudo apt-get install -y libcurl4-openssl-dev pkg-config
	sudo apt-get install -y libsasl2-dev
	
将上面的安装执行一遍，然后./configure --with-php-config=/usr/local/php/7.3.6/bin/php-config --with-openssl 

安装fileinfo扩展:
	cd ext/fileinfo
	phpize
	./configure --with-php-config=/usr/local/php/7.3.6/bin/php-config
	make
	make install

5. 安装swoole扩展

cd swoole-src-master
phpize
./configure
sudo make
sudo make install
swoole的./configure有很多额外参数，可以通过./configure --help命令查看,这里均选择默认项
安装完成后，进入/etc/php目录下，打开php.ini文件，在其中加上如下一句：
extension=swoole.so
随后在终端中输入命令php -m查看扩展安装情况。如果在列出的扩展中看到了swoole，则说明安装成功。



6. 查看php扩展 - 
	1. php -m
	2. php --ri swoole
	3. php --info

7. 安装redis扩展
	1. 安装redis

	下载：git clone https://github.com/phpredis/phpredis
	cd phpredis #进入安装目录
	phpize #用phpize生成configure配置文件
	./configure --with-php-config=/usr/local/php/7.3.6/bin/php-config  #配置
	sudo make  #编译
	sudo make install  #安装

	安装完成之后，出现下面的安装路径
	/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626/

	2. 配置php支持
	vi /usr/local/php/etc/php.ini  #编辑配置文件，在最后一行添加以下内容
	extension="redis.so"

	3. 重启服务
	sudo service nginx restart
	sudo /etc/init.d/php-fpm restart 
	
8. 安装mysql扩展
	install mysql in linux
	cd php源码目录/ext/mysql
	phpize
	./configure
	sudo make
	sudo make install
	vim /etc/php/xx/php.ini  加入extension=mysql.so

9. nginx配置并运行多个php版本
    1.修改php7的php-fmp服务端口号
        进入到目录：/usr/local/php/5.7.xx/etc 修改php-fpm.conf这个文件的监听端口listen = 127.0.0.1:9001
        启动php-fpm

    2. 现在的情况是：PHP5.6的php-fpm监听的是 127.0.0.1:9000, PHP7.1的php-fpm监听的是 127.0.0.1:9001,
        如果需要同时启用就都启动这两个php-fpm,
        进入nginx配置目录/usr/local/etc/nginx/nginx.conf：（注意看两个server 的 fastcgi_pass:后面监听的端口）
         PHP5.6: 9987-> 127.0.0.1:9000
         PHP7.1: 9988-> 127.0.0.1:9009

    3. 重启nginx